---
title: Rotating Certificates
owner: Ops Manager
---

This topic describes how to check the expiration date of and rotate Certificate Authorities (CAs) and leaf certificates in <%= vars.platform_name %>.

This includes the <%= vars.ops_manager %> root CA, BOSH NATS CA, the Diego root CA, and other CAs and leaf certificates stored in <%= vars.ops_manager %> and CredHub that are visible to the <%= vars.ops_manager %> API.

<p class='note warning'><strong>Warning:</strong> The rotation procedures described in this topic do not work if the certificates have already expired. If the certificates have expired, contact <a href="https://support.pivotal.io/">Support</a> for guidance.</p>

For information about rotating IPsec certificates, see [Rotating IPsec Certificates](https://docs.pivotal.io/addon-ipsec/credentials.html).

For information about using trusted third-party certificates for both apps hosted on <%= vars.platform_name %> and internal <%= vars.platform_name %> components, see [Setting Trusted Certificates](../../customizing/trusted-certificates.html).

For information about how to rotate certificates managed by CredHub and the Services TLS CA, see [Advanced Certificate Rotation with CredHub Maestro](./advanced-certificate-rotation.html).


## <a id='overview'></a> Overview

The <%= vars.ops_manager %> API manages and lists internal Certificate Authorities (CAs) and leaf certificates that enable <%= vars.platform_name %> components to communicate with each other securely using TLS. It can also list certificates used externally, such as SAML certificates that authenticate to an external identity provider (IDP).

For more information about the CAs and leaf certificates visible to the <%= vars.ops_manager %> API, see [Certificate Types](certificate-types.html).

Rotate CAs and leaf certificates before they expire to avoid downtime for your foundation. To rotate certificates in <%= vars.platform_name %>, first check the expiration dates of all certificates. Then, based on the types of certificates that expire soon, follow a certificate rotation procedure to replace expiring certificates and redeploy BOSH to apply changes.


## <a id='prerequisite'></a> Prerequisites

Before you rotate certificates in <%= vars.ops_manager %> <%= vars.v_major_version %>:

* You must reset any certificates that were manually set in CredHub on <%= vars.ops_manager %> v2.6 and earlier to prevent them from being rotated with other certificates generated by CredHub. To find and reset any manually set certificates in CredHub, see [Reviewing Manually Set Certificates in CredHub](manual-credhub-certificate.html).

* You must have both <%= vars.ops_manager %> <%= vars.v_major_version %> and <%= vars.app_runtime_full %> <%= vars.v_major_version %> or later to rotate CredHub-managed certificates with this procedure. If you have a version of <%= vars.app_runtime_full %> earlier than <%= vars.v_major_version %>, you can follow this procedure to rotate certificates managed by <%= vars.ops_manager %>. Then, to rotate certificates managed in CredHub, see [Advanced Certificate Rotation with CredHub Maestro](advanced-certificate-rotation.html).

* You cannot have <%= vars.k8s_runtime_full %> installed to rotate CredHub-managed certificates with this procedure. If you have <%= vars.k8s_runtime_full %>, you can follow this procedure to rotate certificates managed by <%= vars.ops_manager %>. Then, to rotate certificates managed in CredHub, see [Advanced Certificate Rotation with CredHub Maestro](advanced-certificate-rotation.html).


## <a id='checks'></a> Check Expiration Dates and Certificate Types

This section describes how to manually check the expiration dates of the CAs and leaf certificates that the <%= vars.ops_manager %> API lists and manages. It also explains how to identify the types of certificates that require manual rotation.

To configure Concourse to automatically monitor expiring certificates, you can use Platform Automation. For more information, see  [expiring-certificates](https://docs.pivotal.io/platform-automation/v4.1/tasks.html#expiring-certificates) in the Platform Automation documentation.

After identifying the types of certificates that expire soon, you can determine which certificate rotation procedure to follow.

To check certificate expiration dates and types:

1. Follow the procedure in [Using <%= vars.ops_manager %> API](../../customizing/ops-man-api.html) to target and authenticate with the <%= vars.ops_manager %> User Account and Authentication (UAA) server. Record your <%= vars.ops_manager %> access token, and use it for `UAA-ACCESS-TOKEN` in the steps below.
  <p class="note"><strong>Note:</strong> When you record your <%= vars.ops_manager %> access token, remove any newline characters such as <code>\n</code>.</p>

1.  To retrieve the certificates, use `curl` to call the `/deployed/certificates` endpoint of the <%= vars.ops_manager %> API. Run:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/deployed/certificates" \
          -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the fully-qualified domain name (FQDN) of your <%= vars.ops_manager %> deployment.
    * `UAA-ACCESS-TOKEN` is the <code>access_token</code> value you recorded in the previous step.
    <br>
    <br>
    More options:
      * To limit command output to certificates that expire within a given time interval, append `?expires_within=TIME` to the endpoint, replacing `TIME` with an integer-letter code.<br />
          * Valid letter codes are `d` for days, `w` for weeks, `m` for months, and `y` for years.
          * For example, querying to `https://OPS-MANAGER-FQDN/api/v0/deployed/certificates?expires_within=6m` searches for certificates expiring within six months.
      * To make the JSON output more readable, you can pipe your `curl` command to [jq](https://stedolan.github.io/jq/) or another text editor with JSON formatting.

1. The `deployed/certificates` output lists all CAs and leaf certificates visible to the <%= vars.ops_manager %> API, whether they are stored in <%= vars.ops_manager %> directly or stored in CredHub. To determine the expiration date and type for each certificate listed:
  1. Determine the expiration date from the `valid_until` value. For example, the root CA listed below expires on August 12, 2020:
    <pre class='terminal'>
    {
      "configurable": true,
      "is_ca": true,
      "property_reference": ".properties.root_ca.fb10484dd5541a273c9d",
      "property_type": "rsa_cert_credentials",
      "product_guid": "ops_manager",
      "location": "ops_manager",
      "variable_path": null,
      "issuer": "/CN=ToolsmithsCA",
      "valid_from": "2019-08-13T15:30:22Z",
      "valid_until": "2020-08-12T15:30:22Z"
    },
    </pre>
  1. For any certificates expiring soon, use the following rules to identify their types:
      * **Non-Rotatable Certificates**: Non-Rotatable certificates have the following property value:
          * `variable_path` is `/opsmgr/bosh_dns/tls_ca`
      * **Non-Configurable Certificates**: Non-Configurable leaf certificates have the following property values:
          * `variable_path` is not `/opsmgr/bosh_dns/tls_ca`
          * `configurable` is `false`
          * `location` is either `ops_manager` or `credhub`
          * `is_ca` is `false`
      * **Configurable Certificates**: Configurable leaf certificates have the following property values:
          * `configurable` is `true`
          * `is_ca` is `false`
      * **CAs**: CAs have the following property values:
          * `is_ca` is `true`
          * `location` is `ops_manager` or `credhub`

1. After you identify the list of certificates that expire soon, complete the [Rotate Certificates](#rotate) procedure below.


## <a id='rotate'></a> Rotate Certificates

This section explains how to rotate certificates in <%= vars.platform_name %>, including the <%= vars.ops_manager %> root CA, BOSH NATS CA, CAs stored in CredHub, and leaf certificates. There are different rotation procedures for each type of certificate that requires rotation.

You can determine which rotation procedure to follow based on the types of certificates in your foundation that must be rotated.

To rotate certificates, do one of these procedures:

* To rotate non-rotatable certificates, call [Support](http://support.pivotal.io).

* To rotate CAs stored in <%= vars.ops_manager %> and CredHub, see [Rotate CAs and Leaf Certificates](#rotate-ca). This procedure also rotates all non-configurable leaf certificates and the BOSH NATS CA. You can also optionally rotate configurable leaf certificates as part of this procedure.

* To rotate non-configurable leaf certificates, but not the <%= vars.ops_manager %> root CA or BOSH NATS CA, see [Rotate Non-Configurable Leaf Certificates](#regenerate).

* To rotate configurable leaf certificates, but not the <%= vars.ops_manager %> root CA or BOSH NATS CA, see [Rotate Configurable Leaf Certificates](#rotate-config).

### <a id='rotate-ca'></a> Rotate CAs and Leaf Certificates

This procedure uses the <%= vars.ops_manager %> API to rotate the <%= vars.ops_manager %> root CA and non-configurable leaf certificates. When you rotate the <%= vars.ops_manager %> root CA, the <%= vars.ops_manager %> API also automatically rotates the BOSH NATS CA and other CAs stored in CredHub, such as the Diego root CA.

To prevent system downtime, this procedure includes two BOSH deploys. The first BOSH deploy applies new certificates to <%= vars.platform_name %> components. The second BOSH deploy deletes the old certificates.

<p class="note warning"><strong>Warning:</strong> You must complete these steps in the exact order specified. Otherwise, you may damage your deployment.</p>

To rotate CAs and non-configurable leaf certificates:

1. Add a new <%= vars.ops_manager %> root CA. This step also automatically adds new CAs for all CAs visible to the <%= vars.ops_manager %> API. For more information, see [Add New CAs](#add-new-ca).

1. Activate the <%= vars.ops_manager %> root CA. This step also automatically activates any other new CAs added in the previous step. For more information, see [Activate the CAs](#activate-new-ca).

1. (Optional) Rotate configurable leaf certificates. For more information, see [Rotate Configurable Leaf Certificates](#rotate-config-after-new-root).

1. Rotate non-configurable leaf certificates. For more information, see [Rotate Non-Configurable Leaf Certificates from the New CAs](#regenerate-from-new-root).

1. Delete the old CA. For more information, see [Delete the Old CA](#delete).

#### <a id='add-new-ca'></a> Step 1: Add New CAs

This section describes how to add a new root CA for <%= vars.ops_manager %>. The new root CA can be a <%= vars.platform_name %>-generated CA or your own custom CA.

This procedure also automatically regenerates the BOSH NATS CA as well as CAs stored in CredHub, such as the BOSH DNS CA and the Diego root CA.

To add new CAs:

1. If you have not already done so, follow the procedure in [Using <%= vars.ops_manager %> API](../../customizing/ops-man-api.html) to target and authenticate with the <%= vars.ops_manager %> User Account and Authentication (UAA) server. Record your <%= vars.ops_manager %> access token, and use it for `UAA-ACCESS-TOKEN` in the following steps.
  <p class="note"><strong>Note:</strong> When you record your <%= vars.ops_manager %> access token, remove any newline characters such as <code>\n</code>.</p>

1. Use <%= vars.ops_manager %> to generate a new CA, or add your own custom CA:
  <p class ="note"><strong>Note:</strong> Elliptic Curve Digital Signature Algorithm (ECDSA) certificates are not supported in <%= vars.platform_name %>.</p>
  * **To use your own custom CA**: Call the <%= vars.ops_manager %> API `certificate_authorities` endpoint. Run:

        ```
        curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities" \
            -X POST \
            -H "Authorization: Bearer UAA-ACCESS-TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"cert_pem": "-----BEGIN CERTIFICATE-----\CUSTOM-CERTIFICATE", "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\RSA-KEY"}'
        ```
        Where:
        * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
        * `CUSTOM-CERTIFICATE` is your custom CA.
        * `RSA-KEY` is your RSA key.
        * `UAA-ACCESS-TOKEN` is your UAA access token.
        <br>
        <br>
        If the command succeeds, the API returns a response that includes the new CA certificate:
        <pre class="terminal">
          HTTP/1.1 200 OK
          {
            "certificate_authorities": [
              {
                "guid": "f7bc18f34f2a7a9403c3",
                "issuer": "YOUR-CA",
                "created_on": "2017-01-09",
                "expires_on": "2021-01-09",
                "active": true,
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIC+zCCAeOgAwIBAgI....etc"
              }
            ]
          }
        </pre>
  * **To use a <%= vars.platform_name %>-generated CA**: Call the <%= vars.ops_manager %> API `generate` endpoint. Run:

        ```
        curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities/generate" \
              -X POST \
              -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN" \
              -H "Content-Type: application/json" \
              -d '{}'
        ```
        Where:
        * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
        * `UAA-ACCESS-TOKEN` is your UAA access token.
        </br>
        </br>
        If the command succeeds, the API returns a response that includes the new CA certificate:
        <pre class="terminal">
            HTTP/1.1 200 OK
        {
            "guid": "f7bc18f34f2a7a9403c3",
            "issuer": "<%= vars.company_name %>",
            "created_on": "2017-01-19",
            "expires_on": "2021-01-19",
            "active": false,
            "cert_pem": "-----BEGIN EXAMPLE CERTIFICATE-----
            MIIC+zCCAeOgAwIBAgIBADANBgkqhkiG9w0BAQsFADAfMQswCQYDVQQGEwJVUzEQ
            EXAMPLEoCgwHUGl2b3RhbDAeFw0xNDarthgyMTQyMjVaFw0yMTAxMTkyMTQyMjVa
            EXAMPLEoBgNVBAYTAlVTMRAwDgYDVVaderdQaXZvdGFsMIIBIjANBgkqhkiG9w0B
            EXAMPLEoAQ8AMIIBCgKCAQEAyV4OhPIIZTEym9OcdcNVip9Ev0ijPPLo9WPLUMzT
            EXAMPLEo/TgD+DP09mwVXfqwBlJmoj9DqRED1x/6bc0Ki/BAFo/P4MmOKm3QnDCt
            EXAMPLEooqgA++2HYrNTKWJ5fsXmERs8lK9AXXT7RKXhktyWWU3oNGf7zo0e3YKp
            EXAMPLEoh1NwIbNcGT1AurIDsxyOZy1HVzBLTisMyDogJmSCLsOw3qUDQjatjXKw
            EXAMPLEojG3nv2hvD4/aTOiHuKM3+AGbnaS2MdIOvFOh/7Y79tUp89csK0gs6uOd
            EXAMPLEohe4DcKw5CzUTfHKNXgHyeoVOBPcVQTp4lJp1iQIDAQABo0IwQDAdBgNV
            EXAMPLEoyH4y7VEuImLStXM0CKR8uVqxX/gwDwYDVR0TAQH/BAUwAwEB/zAOBgNV
            EXAMPLEoBAMCAQYwDQYJKoZIhvcNAQELBQADggEBALmHOPxdyBGnuR0HgR9V4TwJ
            EXAMPLEoGLKVT7am5z6G2Oq5cwACFHWAFfrPG4W9Jm577QtewiY/Rad/PbkY0YSY
            EXAMPLEokrfNjxjxI0H2sr7qLBFjJ0wBZHhVmDsO6A9PkfAPu4eJvqRMuL/xGmSQ
            EXAMPLEoCynMNz7FgHyFbd9D9X5YW8fWGSeVBPPikcONdRvjw9aEeAtbGEh8eZCP
            EXAMPLEob33RuR+CTNqThXY9k8d7/7ba4KVdd4gP8ynFgwvnDQOjcJZ6Go5QY5HA
            EXAMPLEoPFW8pAYcvWrXKR0rE8fL5o9qgTyjmO+5yyyvWIYrKPqqIUIvMCdNr84=
              -----END EXAMPLE CERTIFICATE-----
              "
        </pre>

1. Confirm that the new CA is added by listing all the root CAs for <%= vars.ops_manager %> by running:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities" \
          -X GET \
          -H "Authorization: Bearer UAA-ACCESS-TOKEN"
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `UAA-ACCESS-TOKEN` is your UAA access token.
    </br>
    </br>
    The API call returns the GUID of the newly added CA. For example:
    <pre class="terminal">
      HTTP/1.1 200 OK
      {
        "certificate_authorities": [
          {
            "guid": "f7bc18f34f2a7a9403c3",
            "issuer": "<%= vars.company_name %>",
            "created_on": "2017-01-09",
            "expires_on": "2021-01-09",
            "active": true,
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIC+zCCAeOgAwIBAgI....etc"
          }
          {
            "guid": "a8ee01e33e3e3e3303e3",
            "issuer": "<%= vars.company_name %>",
            "created_on": "2017-04-09",
            "expires_on": "2021-04-09",
            "active": false,
            "cert_pem": "-----BEGIN CERTIFICATE-----\nzBBBC+eAAAe1gAwAAAeZ....etc"
          }
        ]
      }
    </pre>

1. Identify the newly added CA, which has `active` set to `false`. Record its GUID.

1. Navigate to `https://OPS-MANAGER-FQDN` in a browser, where `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment, and log in to <%= vars.ops_manager %>.

1. Click the **BOSH Director**.

1. Select **Director Config**.

1. Enable the **Recreate VMs deployed by the BOSH Director** checkbox. This propagates the new CA to all VMs deployed by the BOSH Director to prevent downtime.

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard. For each service tile you have installed:
    1. Click the tile.
    1. Click the **Errands** tab.
    1. If the service tile has the **Recreate All Service Instances** errand:
        1. Enable the **Recreate All Service Instances** errand.
        1. Click **Review Pending Changes**, then **Apply Changes**.
    1. If the service tile does not have the **Recreate All Service Instances** errand:
        1. Click **Review Pending Changes**, then **Apply Changes**.
        1. When the deploy finishes, manually push the BOSH NATS CA to each of its service instances. For each service instance, run:

            ```
            bosh -d SERVICE-INSTANCE-DEPLOYMENT recreate
            ```
            Where `SERVICE-INSTANCE-DEPLOYMENT` is the BOSH deployment name for the service instance.

Continue to the next section, [Step 2: Activate the CAs](#activate-new-ca).

#### <a id='activate-new-ca'></a> Step 2: Activate the CAs

To activate the CAs that you added in [Step 1: Add New CAs](#add-new-ca):

1. Make an <%= vars.ops_manager %> API call that activates the new CAs. Run:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities/CERTIFICATE-GUID/activate" \
      -X POST \
      -H "Authorization: Bearer UAA-ACCESS-TOKEN" \
      -H "Content-Type: application/json" \
      -d '{}'
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `CERTIFICATE-GUID` is the GUID of your CA that you retrieved in the previous section.
    * `UAA-ACCESS-TOKEN` is your UAA access token.
    </br>
    </br>
    The API returns a successful response:
    <pre class="terminal">HTTP/1.1 200 OK</pre>

1. List your CAs to confirm that the new <%= vars.ops_manager %> root CA is active. Run:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities" \
          -X GET \
          -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `UAA-ACCESS-TOKEN` is your UAA access token.
    <br>
    <br>
    Examine the response to ensure that your new CA has the `active` property set to `true`.

#### <a id='rotate-config-after-new-root'></a> (Optional) Step 3: Rotate Configurable Leaf Certificates

If there are any configurable certificates in your foundation expiring soon, <%= vars.recommended_by %> recommends that you rotate them now. Rotating configurable leaf certificates now ensures that your next BOSH deploy includes both new configurable and non-configurable leaf certificates.

To rotate configurable leaf certificates, do the following for each configurable certificate that expires soon:

1. Find the text field where the certificate is configured within the <%= vars.ops_manager %> interface. You might need to look through multiple configuration panes to identify the location of the certificate configuration text field. Use the following fields to identify the location of the certificate configuration text field:
    * The `product_guid` field in the API output can help identify in which tile the certificate is configured. For example, the prefix `p-bosh-` refers to the BOSH Director tile, and the prefix `cf-` refers to the <%= vars.platform_name %> tile.
    * The `property_reference` field in the API output can help identify in which **Settings** pane the certificate is configured. For example, the `uaa.service_provider_key_credentials` property is configured in the **UAA** pane of the <%= vars.app_runtime_abbr %> tile.

1. Paste a new value for the certificate into the text field.

1. Click **Save** at the bottom of each pane in which you added new certificates.

#### <a id='regenerate-from-new-root'></a> Step 4: Rotate Non-Configurable Leaf Certificates from the New CAs

After activating the new <%= vars.ops_manager %> root CA and other CAs, you must rotate non-configurable leaf certificates from the new CAs.

To rotate non-configurable leaf certificates:

1. Make an API call to regenerate all non-configurable certificates and apply the new root CA to your existing BOSH Director. Run:

    ```
      curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities/active/regenerate" \
            -X POST \
            -H "Authorization: Bearer UAA-ACCESS-TOKEN" \
            -H "Content-Type: application/json" \
            -d '{}'
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `UAA-ACCESS-TOKEN` is your UAA access token.
    <br>
    <br>
    The API returns a successful response:
    <pre class="terminal">HTTP/1.1 200 OK</pre>

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard.

1. Click the BOSH Director tile.

1. Select **Director Config**.

1. Enable the **Recreate VMs deployed by the BOSH Director** checkbox. This propagates the new CAs to all VMs deployed by the BOSH Director to prevent downtime.

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard. For each service tile you have installed:
    1. Click the tile.
    1. Click the **Errands** tab.
    1. If the service tile has the **Recreate All Service Instances** errand:
        1. Enable the **Recreate All Service Instances** errand.
        1. Click **Review Pending Changes**, then **Apply Changes** to perform a second redeploy.
    1. If the service tile does not have the **Recreate All Service Instances** errand:
        1. Click **Review Pending Changes**, then **Apply Changes** to perform a second redeploy.
        1. When the deploy finishes, manually push the BOSH NATS CA to each of its service instances. For each service instance, run:

            ```
            bosh -d SERVICE-INSTANCE-DEPLOYMENT recreate
            ```
            Where `SERVICE-INSTANCE-DEPLOYMENT` is the BOSH deployment name for the service instance.

Continue to the next section, [Step 5: Delete the Old CAs](#delete).

#### <a id='delete'></a> Step 5: Delete the Old CAs

After activating new CAs and rotating leaf certificates from the new CAs, <%= vars.recommended_by %> recommends that you:

* Delete the old <%= vars.ops_manager %> root CA from your foundation.
* Mark the old CAs stored in CredHub as inactive.

<p class="note"><strong>Note:</strong> This procedure does not delete certificates stored in CredHub. It marks CredHub certificates as transitional, which indicates that the certificate is inactive. To delete CredHub certificates, use the Maestro garbage collection feature. For information about Maestro certificate garbage collection, see <a href="./advanced-certificate-rotation.html#garbage-collection">Delete Inactive Certificate Versions</a> in <em>Advanced Certificate Rotation with CredHub Maestro</em>.</p>

<p class="note warning"><strong>Warning:</strong> Before you delete the old CA, ensure that you reviewed the <strong>Review Pending Changes</strong> page and clicked <strong>Apply Changes</strong> as part of <a href="#regenerate-from-new-root">Step 4: Rotate Non-Configurable Leaf Certificates from the New CAs</a>.</p>

To delete the old <%= vars.ops_manager %> root CA and mark CredHub CAs as inactive:

1. List your root CAs to retrieve the GUID of the old, inactive <%= vars.ops_manager %> root CA. Run:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities" \
          -X GET \
          -H "Authorization: Bearer UAA-ACCESS-TOKEN"
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `UAA-ACCESS-TOKEN` is your UAA access token.

1. Use `curl` to make an API call to delete the old <%= vars.ops_manager %> root CA. Run:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities/OLD-CERTIFICATE-GUID" \
          -X DELETE \
          -H "Authorization: Bearer UAA-ACCESS-TOKEN"
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `OLD-CERTIFICATE-GUID` is the GUID of the old <%= vars.ops_manager %> root CA.
    * `UAA-ACCESS-TOKEN` is your UAA access token.
    </br>
    </br>
    The API returns a successful response:
    <pre class="terminal">HTTP/1.1 200 OK</pre>

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard.

1. Click **Review Pending Changes**.

1. Click **Apply Changes**.

### <a id='regenerate'></a> Rotate Non-Configurable Leaf Certificates

This procedure rotates non-configurable leaf certificates visible to the <%= vars.ops_manager %> API, whether they are managed and stored by <%= vars.ops_manager %> directly, or by CredHub at <%= vars.ops_manager %> request.

<p class='note warning'><strong>Warning:</strong> This procedure does not rotate the <%= vars.ops_manager %> root CA or other CAs managed by <%= vars.ops_manager %> or CredHub. To rotate both the root CA and non-configurable leaf certificates, see <a href="#rotate-ca">Rotate CAs and Leaf Certificates</a>.</p>

To rotate non-configurable leaf certificates:

1. Use `curl` to make an API call to regenerate all non-configurable certificates and apply the new CA to your existing BOSH Director. Run:

    ```
    curl "https://OPS-MANAGER-FQDN/api/v0/certificate_authorities/active/regenerate" \
          -X POST \
          -H "Authorization: Bearer UAA-ACCESS-TOKEN" \
          -H "Content-Type: application/json" \
          -d '{}'
    ```
    Where:
    * `OPS-MANAGER-FQDN` is the FQDN of your <%= vars.ops_manager %> deployment.
    * `UAA-ACCESS-TOKEN` is your UAA access token.
    </br>
    </br>
    The API returns a successful response:
    <pre class="terminal">HTTP/1.1 200 OK</pre>

1. Navigate to the <%= vars.ops_manager %> Installation Dashboard.

1. Click **Review Pending Changes**.

1. Click **Apply Changes** to perform a second redeploy.

### <a id='rotate-config'></a> Rotate Configurable Leaf Certificates

Configurable certificates are generated by the user and pasted into <%= vars.ops_manager %> configuration panes where needed. Examples include certificates that terminate SSL traffic into <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>), or authenticate a Single Sign-On (SSO) service plan to an external SAML server.

For instructions on how to rotate SAML certificates for both <%= vars.app_runtime_abbr %> and the SSO service, see [Rotate Identity Provider SAML Certificates](#rotate-saml-ca).

<p class="note warning"><strong>Warning:</strong> This procedure does not rotate the <%= vars.ops_manager %> root CA. To rotate both the root CA and non-configurable leaf certificates, see <a href="#rotate-ca">Rotate CAs and Leaf Certificates</a>.</p>

To rotate configurable leaf certificates:

1. If you have not already done so, use the <%= vars.ops_manager %> API `deployed/certificates` endpoint to retrieve information about your expiring configurable certificates, as described in the procedures [Check Expiration Dates and Certificate Types](#checks). The information for each configurable certificate looks like this:
  <pre class="terminal">
    {
      "configurable": true,
      "property_reference": ".properties.networking_poe_ssl_certs[0].certificate",
      "property_type": "rsa_cert_credentials",
      "product_guid": "cf-36066831c119c39736d3",
      ...
      "valid_until": "2019-01-25T22:07:58Z"
    },
  </pre>

1. For each configurable certificate that expires soon:
  1. Find the text field the certificate is configured within the <%= vars.ops_manager %> interface.
      * The `product_guid` field in the API output can help identify which tile the certificate is configured in. For example, the prefix `p-bosh-` refers to the BOSH Director tile, and the prefix `cf-` refers to the <%= vars.app_runtime_abbr %> tile.
      * The `property_reference` field in the API output can often help identify which **Settings** pane the certificate is configured in. For example, the `uaa.service_provider_key_credentials` property is configured in the **UAA** pane of the <%= vars.app_runtime_abbr %> tile.
      * You might need to look through multiple configuration panes to identify where a certificate is configured.
  1. Paste a new value for the certificate into the field.
  1. Click **Save** at the bottom of each pane in which you have provided new certificates.

1. If you are rotating configurable certificates within the [Rotate CAs and Leaf Certificates](#rotate-ca) procedure, continue to the next step. Otherwise, if you are rotating configurable leaf certificates only, return to the <%= vars.ops_manager %> Installation Dashboard, click **Review Pending Changes**, and click **Apply Changes**.

### <a id='rotate-saml-ca'></a> Rotate Identity Provider SAML Certificates

SAML service provider (SP) credentials are one example of configurable certificates in <%= vars.app_runtime_abbr %>. When <%= vars.app_runtime_abbr %> is configured to use SAML as an IDP, it uses a configurable CA certificate to authenticate to an external SAML server, by generating ephemeral certificates that <%= vars.app_runtime_abbr %> includes in its outbound request message headers. This CA has a two-year expiration period.

In addition, the Single Sign-On (SSO) service shares the use of <%= vars.app_runtime_abbr %> SAML certificates for every SAML external IDP integration, such as trust, partnership, or federation. You must rotate these in lockstep with <%= vars.app_runtime_abbr %>. For more information about SSO, see the [Single Sign-On documentation](https://docs.pivotal.io/p-identity/index.html).

The following procedure provides an example of how to rotate certificates for each IDP, including temporarily disabling certificate validation on the IDP side during the rotation.

For more information about rotating SAML certificates, see [PCF Advisory - SAML Service Provider Credential Certificates Expire after 2 Years](https://community.pivotal.io/s/article/PCF-Advisory---SAML-Service-Provider-Credential-Certificates-Expire-after-2-Years) in the VMware Tanzu Knowledge Base.

SAML SP credentials are only required for your <%= vars.app_runtime_abbr %> deployment if all of these conditions are met:

* You are using SSO in production for login to <%= vars.app_runtime_abbr %> or using the SSO service for login to apps.

* You are using SAML IDPs for <%= vars.app_runtime_abbr %> or SSO service plans.

* You had <%= vars.ops_manager %> generate a certificate for you by clicking the **Generate RSA Certificate** button.

* You are validating the signature of SAML authentication request with your IDP.

To regenerate and rotate SAML SP certificates without disrupting <%= vars.app_runtime_abbr %> or your apps using the SSO service:

1. Disable certificate validation in your IDP.

1. For <%= vars.app_runtime_abbr %>, follow the procedure in the table below that corresponds to your use case. This includes downloading and importing a new certificate and updated SAML metadata in your IDP.
  <table border="1">
  <tr>
    <th>Solution Name</th>
    <th>Procedure</th>
  </tr>
  <tr>
    <td><a href='http://www.ca.com/us/securecenter/ca-single-sign-on.aspx'>CA Single Sign-On aka CA SiteMinder</a></td>
    <td><a href="../../opsguide/ca-sso-config.html">Configuring CA as an Identity Provider</a></td>
  </tr>
  <tr>
    <td><a href='https://www.pingidentity.com/en/products/pingfederate.html'>PingFederate</a></td>
    <td><a href="../../opsguide/ping-federate-sso-configuration.html">Configuring PingFederate as an Identity Provider</a></td>
  </tr>
  <tr>
    <td><a href='https://technet.microsoft.com/en-us/windowsserver/dd448613.aspx'>Active Directory Federation Services</a></td>
    <td><a href="../../opsguide/adfs-sso-configuration.html">Configuring AD FS as an Identity Provider</a></td>
  </tr>
</table>

1. For the SSO service, follow the procedure in the table below that corresponds to your use case. This includes downloading the SAML SP metadata for each SAML IDP integration, such as trust, partnership, or federation, and importing the updated SAML SP metadata in your IDP.
  <table border="1">
  <tr>
    <th>Solution Name</th>
    <th>Procedure</th>
  </tr>
  <tr>
    <td>AD FS</td>
    <td><a href="https://docs.pivotal.io/p-identity/adfs/config-sso.html">Configuring a Single Sign-On Service Provider</a></td>
  </tr>
  <tr>
    <td>CA SSO</td>
    <td><a href="https://docs.pivotal.io/p-identity/ca-sso/config-sso.html">Configuring a Single Sign-On Service Provider</a></td>
  </tr>
  <tr>
    <td>Okta</td>
    <td><a href="https://docs.pivotal.io/p-identity/okta/config-sso.html">Configure Okta as an Identity Provider</a></td>
  </tr>
  <tr>
    <td>PingFederate</td>
    <td><a href="https://docs.pivotal.io/p-identity/pingfederate/config-sso.html">Configure PingFederate as an Identity Provider</a></td>
  </tr>
  <tr>
    <td>Additional Documentation</td>
    <td><a href="https://docs.pivotal.io/p-identity/index.html#guides">Integration Guides</a></td>
  </tr>
  </table>

1. Re-enable certificate validation in your IDP.
