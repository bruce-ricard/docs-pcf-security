---
title: Rotating Certificates
owner: OpsMan
---

This topic describes how to rotate the root certificate authorities (CAs) and leaf certificates in Pivotal Cloud Foundry (PCF) that are visible to the Ops Manager API. 

This topic includes the following:

* A list of the different types of certificates that require planned rotation. See [Certificate Types](#types).
* Instructions for checking the expiration date of and rotating the Ops Manager root CAs and leaf certificates. See [Master Procedure: Check and Rotate Certificates](#check-and-rotate).

For information about rotating IPsec certificates, see [Rotating IPsec Certificates](../../../addon-ipsec/1-8/credentials.html).

For information about using trusted third-party certificates for both apps hosted on PCF and internal PCF components, see [Setting Trusted Certificates](../../customizing/trusted-certificates.html).


## <a id='intro'></a> Overview

The Ops Manager API manages and lists internal certificates that enable PCF components to communicate with each other securely using TLS. It can also list certificates used externally, such as SAML certificates that authenticate to an external identity provider.

To keep PCF running, you must keep track of which certificates are set to expire soon, and rotate them before they expire. To do this, follow the instructions in [Master Procedure: Check and Rotate Certificates](#check-and-rotate).


## <a id='types'></a> Certificate Types

PCF uses a root CA and various leaf certificates. Root CAs are self-signed certificates that issue leaf certificates. Root CAs can be generated by Pivotal or custom. 

Leaf certificates are signed by a CA and are used to identify resources in PCF. Both root CAs and leaf certificates require planned rotation in PCF.

The following types of <%= vars.product_name %> certificates require planned rotation:

* **Ops Manager Root CA**: The Ops Manager root CA issues other certificates that <%= vars.product_name %> uses. The root CA can be a Pivotal-generated CA or your own custom CA. The Ops Manager root CA expires four years after creation. For more information about viewing the root CAs for Ops Manager, see [Listing the Root Certificate Authorities](https://docs.pivotal.io/pivotalcf/opsman-api/#listing-the-root-certificate-authorities). 

* **Other internal CAs**: The following CAs are used primarily for internal purposes: 
  * **BOSH NATS CA**: The BOSH NATS CA is rotated automatically when you rotate the Ops Manager root CA. The BOSH NATS CA is rotatable in PCF v2.3.10 or later, PCF v2.4.4 or later, and PCF v2.5 or later. For more information, see [2.3.10](https://docs.pivotal.io/pivotalcf/2-3/pcf-release-notes/opsmanager-rn.html#2-3-10) in _Ops Manager v2.3 Release Notes_ and [2.4.4](https://docs.pivotal.io/pivotalcf/2-4/pcf-release-notes/opsmanager-rn.html#2-4-4) in _Ops Manager v2.4 Release Notes_.
  * **BOSH DNS CAs**: The BOSH DNS CAs are applied automatically when you upgrade to PCF v2.3. You cannot rotate the BOSH DNS CAs. To apply all BOSH DNS leaf certificates after upgrading to v2.3, you must rotate all certificates in your environment. For more information, see [BOSH DNS Certificate Authority Upgrades](https://docs.pivotal.io/pivotalcf/2-3/pcf-release-notes/opsmanager-rn.html#bosh-dns-certs) in _Ops Manager v2.3 Release Notes_.

* **Non-configurable Certificates**: Non-configurable certificates are leaf certificates either created by a CA stored in Ops Manager, or created and stored by CredHub and managed by Ops Manager calls to the CredHub API. Non-configurable certificates are issued directly by the Ops Manager root CA, or by intermediate CAs in a chain of trust originated by the root CA. Non-configurable certificates expire after two years. For more information about about viewing non-configurable leaf certificates, see [Getting Information About Certificates for Products](https://docs.pivotal.io/pivotalcf/opsman-api/#getting-information-about-certificates-from-products). For more information about generating non-configurable leaf certificates, see [Generating New Certificates](https://docs.pivotal.io/pivotalcf/opsman-api/#generating-new-certificates). 

* **Configurable Certificates**: Configurable certificates are leaf certificates supplied by the user and pasted into configuration fields in Ops Manager. Some configuration panes include a **Generate RSA Certificate** button that supplies valid certificates, but users can obtain configurable certificates from elsewhere. Configurable certificates generated by Ops Manager typically expire after two years. For more information about viewing configurable leaf certificates, see [Getting Information About Certificates for Products](https://docs.pivotal.io/pivotalcf/opsman-api/#getting-information-about-certificates-from-products).

* **Non-rotatable Certificates**: Non-rotatable certificates are leaf certificates that, like non-configurable certificates, are issued by the root CA. Unlike non-configurable certificates, non-rotatable certificates cannot be rotated by the Ops Manager API. For more information about viewing non-rotatable leaf certificates, see [Getting Information About Certificates for Products](https://docs.pivotal.io/pivotalcf/opsman-api/#getting-information-about-certificates-from-products).opsman-api/#getting-information-about-certificates-from-products).

In addition to the types of certificates listed above, some Pivotal products issue their own tile certificates that are not managed by or visible to the Ops Manager API. These tile certificates do not require planned rotation because they rotate automatically with product upgrades.

Pivotal Application Service (PAS) and Pivotal Container Service (PKS) both use tile certificates in addition to their Ops Manager certificates.


## <a id='check-and-rotate'></a> Master Procedure: Check and Rotate Certificates

The following master procedure checks expiration dates of different types of internal certificates and rotates them only as necessary. You can run this procedure only when records show that your certificates will expire soon, or else periodically to comply your organization's security compliance policies.

To check and rotate certificates, do the following:

1. Follow the [Check Ops Manager Root CA Expiration Date](#root-expiry) procedure and record your root CA expiration date.

1. Follow the [Check Leaf Certificate Expiration Dates](#leaf-expiry) procedure and record any leaf certificates that are expiring soon.

1. Follow the [Identify Non-Configurable, Configurable, and Unrotatable Leaf Certificates](#id-leaf-type) to determine which types of leaf certificates require rotation.

1. Do the following to rotate certificates as necessary:
  1. If you have any non-rotatable certificates expiring soon, call [Pivotal Support](http://support.pivotal.io).
  1. If your root CA expires soon, follow the [Rotate Root and Leaf Certificates](#rotate-ca) procedure.
    <p class='note'><b>Note:</b> If you also have configurable leaf certificates expiring soon, Pivotal recommends that you follow the procedure in _Step 3 (Optional): Rotate Configurable Certificates_. You can also rotate your configurable certificates separately and re-deploy later.</p>
  1. If you have non-configurable leaf certificates expiring soon, but not your root CA, follow the [Rotate Non-Configurable Certificates](#regenerate) procedure.
  1. If you have configurable leaf certificates expiring soon, but not your root CA, follow the [Rotate Configurable Certificates](#rotate-config) procedure.


## <a id='checks'></a> Check Expiration Dates and Certificate Types

Complete the following procedures to check the expiration dates and types of CAs and leaf certificates that the Ops Manager API lists and manages.

### <a id='root-expiry'></a> Check Ops Manager Root CA Expiration Date

This procedure describes how to check the expiration date for the Ops Manager root CA. The Ops Manager root CA expires four years after creation. 

To check the Ops Manager root CA expiration date, do the following:

1. Perform the steps in the [Using Ops Manager API](../../customizing/ops-man-api.html) topic to target and authenticate with the Ops Manager User Account and Authentication (UAA) server. Record your Ops Manager access token, and use it for `YOUR-UAA-ACCESS-TOKEN` in the steps below.
  <p class="note"><strong>Note:</strong> When you record your Ops Manager access token, remove any newline characters such as <code>\n</code>.</p>

1. To retrieve the Ops Manager root CA, use `curl` to make an Ops Manager API call to the `https://OPS-MAN-FQDN/api/v0/certificate_authorities` endpoint. For example:
    <pre class='terminal'>
    $ curl "https<span>:</span>//OPS-MAN-FQDN/api/v0/certificate_authorities" \
          -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
    </pre>

1. To make the JSON output more readable, you can pipe it to [jq](https://stedolan.github.io/jq/) or another text editor with JSON formatting.

1. In the `certificate_authorities` list returned, if there is more than one, find the CA with `"active": true`.

1. To determine its expiration date of the active CA, refer to its `expires_on` value. For example, the root CA shown below expires on September 5, 2019:
    <pre class='terminal'>
{
  "certificate_authorities": [
    {
      "guid": "9c9a110c8f82a1e4aaca",
      "issuer": "Pivotal",
      "created_on": "2017-09-05T22:47:53Z",
      "expires_on": "2019-09-05T22:47:53Z",
      "active": true,
      "cert_pem": "\-\-\-\-\-BEGIN CERTIFICATE\-\-\-\-\-\
      [...]
      \n-----END CERTIFICATE\-\-\-\-\-\n"
    </pre>


### <a id='leaf-expiry'></a> Check Leaf Certificate Expiration Dates

This procedure describes how to check the expiration dates of non-configurable and configurable leaf certificates. Non-configurable leaf certificates expire after two years. Configurable leaf certificates generated by Ops Manager also typically expire after two years.

To check the expiration dates for non-configurable and configurable leaf certificates, do the following:

1. If you haven't already, perform the steps in the [Using Ops Manager API](../../customizing/ops-man-api.html) topic to target and authenticate with the Ops Manager User Account and Authentication (UAA) server. Record your Ops Manager access token, and use it for `YOUR-UAA-ACCESS-TOKEN` in the steps below.
  <p class="note"><strong>Note:</strong> When you record your Ops Manager access token, remove any newline characters such as <code>\n</code>.</p>

1. To check the system for certificates that expire within a given time interval, use `curl` to call the `https://OPS-MAN-FQDN/api/v0/deployed/certificates?expires_within=TIME` API endpoint, replacing `TIME` with an integer-letter code.
    Valid letter codes are `d` for days, `w` for weeks, `m` for months, and `y` for years.<br><br>
    For example, the following command searches for certificates expiring within six months:
    <pre>
    $ curl "https<span>:</span>//OPS-MAN-FQDN/api/v0/deployed/certificates?expires_within=6m" \
          -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
    </pre>
    Replace `YOUR-UAA-ACCESS-TOKEN` with the <code>access_token</code> value you recorded in the previous step.

1. To make the JSON output more readable, you can pipe it to [jq](https://stedolan.github.io/jq/) or another text editor with JSON formatting.

1. To determine the expiration date of each certificate, refer to its `expires_on` value.

1. To determine the type of each certificate in the output, follow the [Identify Non-Configurable, Configurable, and Unrotatable Leaf Certificates](#id-leaf-type) procedure.

### <a id='id-leaf-type'></a> Identify Non-Configurable, Configurable, and Unrotatable Leaf Certificates

Output from the `deployed/certificates` endpoint, such as the output generated in the [Check Leaf Certificate Expiration Dates](#leaf-expiry) procedure, combines information about non-configurable, configurable, and unrotatable leaf certificates into a single list.

You need to manually rotate the different leaf certificate types in different ways. 

The following rules identify the type of each leaf certificate requiring rotation:

* **Non-Rotatable Certificates**: Non-Rotatable leaf certificates have the following property value:
  - `variable_path` is `/opsmgr/bosh_dns/tls_ca`  

    If you have non-rotatable certificates expiring soon, call [Pivotal Support](https://support.pivotal.io).

* **Non-Configurable Certificates**: Non-Configurable leaf certificates have the following property values, but are not non-rotatable as identified above:
  - `configurable` is `false`
  - `location` is either `ops_manager` or `credhub`

* **Configurable Certificates**: Configurable leaf certificates have the following property value:
  - `configurable` is `true`


## <a id='rotate'></a> Rotate CAs and Leaf Certificates

The following procedures rotate the Ops Manager root CA, BOSH NATS CA, and leaf certificates that are listed or managed by the Ops Manager API.

<p class='note'><strong>Note:</strong> The rotation procedures described in this topic does not work when your certificates have already expired.  If your certificates have expired, contact <a href="https://support.pivotal.io/">Pivotal Support</a> for guidance.</p>

### <a id='rotate-ca'></a> Rotate Root and Leaf Certificates

This procedure uses the Ops Manager API to rotate the Ops Manager root CA, the BOSH NATS CA, and the intermediate CAs and non-configurable leaf certificates underneath them.

<p class="note"><b>Note:</b> The BOSH NATS CA is automatically rotated when you rotate the Ops Manager root CA. For more information, see <a href="#types">Certificate Types</a>.</p>

Rotating the Ops Manager root CA automatically rotates all configurable leaf certificates. You can also rotate configurable leaf certificates separately from rotating the root CA. For information about rotating configurable leaf certificates without also rotating the root CA, see [Rotate Configurable Certificates](#rotate-config).

PCF users never need to manually rotate intermediate CAs, because they rotate automatically when the root CA is rotated.

To prevent system downtime, this procedure includes two BOSH redeploys. When you click **Apply Changes** for the first time, BOSH applies new certificates to PCF components alongside the old ones. The second **Apply Changes** then deletes the old certificates. Each successful redeploy verifies that the certificate rotation process is proceeding correctly.

<p class="note warning"><strong>Warning:</strong> You must complete these steps in the exact order specified. Otherwise, you risk damaging your deployment.</p>

<p class="note warning"><strong>Warning:</strong> If you use mutual TLS for route integrity, do not attempt to rotate certificate authorities (CAs). Instead, contact <a href="https://support.pivotal.io">Pivotal Support</a>. For more information, see <a href="https://docs.pivotal.io/pivotalcf/2-4/pcf-release-notes/runtime-rn.html#cert-rotation-with-mutual-tls-route-integrity">Certificate Authority Rotation is Not Working in Some PAS Configurations</a>.</p>

#### <a id='add-new-ca'></a> Step 1: Add a New Root CA

Follow this procedure to add a new root CA for Ops Manager. The new root CA can be a Pivotal-generated CA or your own custom CA.

To add a new root CA for Ops Manager, do the following:

1. If you haven't already, perform the steps in the [Using Ops Manager API](../../customizing/ops-man-api.html) topic to target and authenticate with the Ops Manager User Account and Authentication (UAA) server. Record your Ops Manager access token, and use it for `YOUR-UAA-ACCESS-TOKEN` in the following procedures.
  <p class="note"><strong>Note:</strong> When you record your Ops Manager access token, remove any newline characters such as <code>\n</code>.</p>

1. Use Ops Manager to generate a new CA, or else add your own custom CA. 
  <p class ="note"><b>Note:</b> Elliptic Curve Digital Signature Algorithm (ECDSA) certificates are not supported in PCF.</p>
  * **To use your own custom CA**, call the Ops Manager API `certificate_authorities` endpoint as follows:
    <pre>
      curl "http<span>s:</span>//OPS-MAN-FQDN/api/v0/certificate_authorities" \
          -X POST \
          -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"cert_pem": "-----BEGIN CERTIFICATE-----\YOUR-CERTIFICATE", "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\YOUR-KEY"}'
    </pre>
    Where:
    <ul><li>`YOUR-CERTIFICATE` is your custom CA.</li> 
      <li>`YOUR-KEY` is your RSA key.</li>
      <li>`YOUR-UAA-ACCESS-TOKEN` is your UAA access token.</li></ul><p>If the command succeeds, the API returns a response that includes the new CA certificate:</p> 
    <pre class="terminal">
      HTTP/1.1 200 OK
      {
        "certificate_authorities": [
          {
            "guid": "f7bc18f34f2a7a9403c3",
            "issuer": "YOUR-CA",
            "created_on": "2017-01-09",
            "expires_on": "2021-01-09",
            "active": true,
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIC+zCCAeOgAwIBAgI....etc"
          }
        ]
      }
    </pre>
  * **To use a Pivotal-generated CA**, call the Ops Manager API `generate` endpoint as follows:
    <pre>
    $ curl "http<span>s</span>://OPS-MAN-FQDN/api/v0/certificate_authorities/generate" \
          -X POST \
          -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN" \
          -H "Content-Type: application/json" \
          -d '{}'
    </pre>
    If the command succeeds, the API returns a response that includes the new CA certificate:
    <pre class="terminal">
          HTTP/1.1 200 OK
      {
          "guid": "f7bc18f34f2a7a9403c3",
          "issuer": "Pivotal",
          "created_on": "2017-01-19",
          "expires_on": "2021-01-19",
          "active": false,
          "cert_pem": "-----BEGIN EXAMPLE CERTIFICATE-----
          MIIC+zCCAeOgAwIBAgIBADANBgkqhkiG9w0BAQsFADAfMQswCQYDVQQGEwJVUzEQ
          EXAMPLEoCgwHUGl2b3RhbDAeFw0xNDarthgyMTQyMjVaFw0yMTAxMTkyMTQyMjVa
          EXAMPLEoBgNVBAYTAlVTMRAwDgYDVVaderdQaXZvdGFsMIIBIjANBgkqhkiG9w0B
          EXAMPLEoAQ8AMIIBCgKCAQEAyV4OhPIIZTEym9OcdcNVip9Ev0ijPPLo9WPLUMzT
          EXAMPLEo/TgD+DP09mwVXfqwBlJmoj9DqRED1x/6bc0Ki/BAFo/P4MmOKm3QnDCt
          EXAMPLEooqgA++2HYrNTKWJ5fsXmERs8lK9AXXT7RKXhktyWWU3oNGf7zo0e3YKp
          EXAMPLEoh1NwIbNcGT1AurIDsxyOZy1HVzBLTisMyDogJmSCLsOw3qUDQjatjXKw
          EXAMPLEojG3nv2hvD4/aTOiHuKM3+AGbnaS2MdIOvFOh/7Y79tUp89csK0gs6uOd
          EXAMPLEohe4DcKw5CzUTfHKNXgHyeoVOBPcVQTp4lJp1iQIDAQABo0IwQDAdBgNV
          EXAMPLEoyH4y7VEuImLStXM0CKR8uVqxX/gwDwYDVR0TAQH/BAUwAwEB/zAOBgNV
          EXAMPLEoBAMCAQYwDQYJKoZIhvcNAQELBQADggEBALmHOPxdyBGnuR0HgR9V4TwJ
          EXAMPLEoGLKVT7am5z6G2Oq5cwACFHWAFfrPG4W9Jm577QtewiY/Rad/PbkY0YSY
          EXAMPLEokrfNjxjxI0H2sr7qLBFjJ0wBZHhVmDsO6A9PkfAPu4eJvqRMuL/xGmSQ
          EXAMPLEoCynMNz7FgHyFbd9D9X5YW8fWGSeVBPPikcONdRvjw9aEeAtbGEh8eZCP
          EXAMPLEob33RuR+CTNqThXY9k8d7/7ba4KVdd4gP8ynFgwvnDQOjcJZ6Go5QY5HA
          EXAMPLEoPFW8pAYcvWrXKR0rE8fL5o9qgTyjmO+5yyyvWIYrKPqqIUIvMCdNr84=
            -----END EXAMPLE CERTIFICATE-----
            "
    </pre>

1. Confirm that your new CA has been added by listing all of the root CAs for Ops Manager:
  <pre>
  $ curl "http<span>s:</span>//OPS-MAN-FQDN/api/v0/certificate_authorities" \
        -X GET \
        -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
  </pre>
  The API call returns something like the following:
  <pre class="terminal">
    HTTP/1.1 200 OK
    {
      "certificate_authorities": [
        {
          "guid": "f7bc18f34f2a7a9403c3",
          "issuer": "Pivotal",
          "created_on": "2017-01-09",
          "expires_on": "2021-01-09",
          "active": true,
          "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIC+zCCAeOgAwIBAgI....etc"
        }
        {
          "guid": "a8ee01e33e3e3e3303e3",
          "issuer": "Pivotal",
          "created_on": "2017-04-09",
          "expires_on": "2021-04-09",
          "active": false,
          "cert_pem": "-----BEGIN CERTIFICATE-----\zBBBC+eAAAe1gAwAAAeZ....etc"
        }
      ]
    }
  </pre>
  Identify your newly added CA, which has `active` set to `false`. Record its GUID.

1. Navigate to `https://OPS-MAN-FQDN` in a browser and log in to Ops Manager.

1. Click the **BOSH Director** tile in the **Installation Dashboard**.

1. Select the **Director Config** pane.

1. Select **Recreate All VMs**. This propagates the new CA to all VMs to prevent downtime.

1. Return to the Ops Manager Installation Dashboard. 

1. If you have service tiles installed, for each service tile:
    1. Click the tile.
    1. Click the **Errands** tab.
    1. If the service tile has the **Recreate All Service Instances** errand:
        1. Enable the **Recreate All Service Instances** errand.
        1. Click **Review Pending Changes**.
        1. Click **Apply Changes**.
    1. If the service tile does not have the **Recreate All Service Instances** errand:
        1. Click **Review Pending Changes**.
        1. Click **Apply Changes**.
        1. When the deploy finishes, manually push the BOSH NATS CA to each of its service instances. For each service instance, run:

            ```
            bosh -d SERVICE-INSTANCE-DEPLOYMENT recreate
            ```
            Where `SERVICE-INSTANCE-DEPLOYMENT` is the BOSH deployment name for the service instance.
            
1. If you do not have any service tiles installed:
    1. Click **Review Pending Changes**.
    1. Click **Apply Changes**.

1. When the deploy finishes and you have completed all necessary tasks to update service instances, continue to the next section, [Step 2: Activate the CAs](#activate-new-ca).

#### <a id='activate-new-ca'></a> Step 2: Activate the New CA

To activate the new CA, do the following:

<a id='activate-new-ca'></a> <strong>Step 2: Activate the Root CA</strong>

To activate the new root CA:

1. Use `curl` to make an Ops Manager API call that activates the new CA:
  <pre>curl "http<span>s</span>://OPS-MAN-FQDN/api/v0/certificate_authorities/CERT-GUID/activate" \
      -X POST \
      -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN" \
      -H "Content-Type: application/json" \
      -d '{}'
  </pre>
  The API returns a successful response:
  <pre class="terminal">HTTP/1.1 200 OK</pre>

1. List your root CAs again to confirm that the new CA is active:
  <pre>
  curl "http<span>s:</span>//OPS-MAN-FQDN/api/v0/certificate_authorities" \
        -X GET \
        -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
  </pre>
  Examine the response to ensure that your new CA has `active` set to `true`.

#### <a id='rotate-config-after-new-root'></a> Step 3 (Optional): Rotate Configurable Certificates

If you have configurable certificates expiring soon, complete the [Rotate Configurable Certificates](#rotate-config) procedure, so that your next deploy includes both new configurable certificates and new non-configurable certificates. You can also rotate your configurable certificates later and perform an additional deploy.

#### <a id='regenerate-from-new-root'></a> Step 4: Rotate Non-Configurable Certificates from the New Root

To rotate non-configurable certificates from the new root CA, do the following: 

1. Use `curl` to make an API call to regenerate all non-configurable certificates and apply the new CA to your existing BOSH Director:
<pre>
  curl "http<span>s</span>://OPS-MAN-FQDN/api/v0/certificate_authorities/active/regenerate" \
        -X POST \
        -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN" \
        -H "Content-Type: application/json" \
        -d '{}'
</pre>
The API returns a successful response:
<pre class="terminal">HTTP/1.1 200 OK</pre>

1. Click the **BOSH Director** tile in the **Installation Dashboard**.

1. Select the **Director Config** pane.

1. Select **Recreate All VMs**. This propagates the new CA to all VMs to prevent downtime.

1. Return to the Installation Dashboard. 

1. If you have service tiles installed, for each service tile:
    1. Click the tile.
    1. Click the **Errands** tab.
    1. If the service tile has the **Recreate All Service Instances** errand:
        1. Enable the **Recreate All Service Instances** errand.
        1. Click **Review Pending Changes**.
        1. Click **Apply Changes**.
    1. If the service tile does not have the **Recreate All Service Instances** errand:
        1. Click **Review Pending Changes**.
        1. Click **Apply Changes**.
        1. When the deploy finishes, manually push the BOSH NATS CA to each of its service instances. For each service instance, run:

            ```
            bosh -d SERVICE-INSTANCE-DEPLOYMENT recreate
            ```
            Where `SERVICE-INSTANCE-DEPLOYMENT` is the BOSH deployment name for the service instance.
            
1. If you do not have any service tiles installed:
    1. Click **Review Pending Changes**.
    1. Click **Apply Changes**.

1. When the deploy finishes and you have completed all necessary tasks to update service instances, continue to the next section, [Step 5: Delete the Old CAs](#delete).

#### <a id='delete'></a> Step 5: (Optional) Delete the Old CA

<p class="note warning"><strong>Warning:</strong> Be sure to include the <strong>Review Pending Changes</strong> and <strong>Apply Changes</strong> from <a href="#regenerate-from-new-root">Step 4: Rotate Non-Configurable certificates from the New Root</a> before you proceed to deleting the old CA.</p>

If you want to delete the old CA, do the following:

1. List your root CAs to retrieve the GUID of your old, inactive CA:
<pre>
  $ curl "http<span>s:</span>//OPS-MAN-FQDN/api/v0/certificate_authorities" \
        -X GET \
        -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
</pre>

1. Use `curl` to make an API call to delete your old CA, replacing `OLD-CERT-GUID` with the GUID of your old, inactive CA:
<pre>
  $ curl "http<span>s</span>://OPS-MAN-FQDN/api/v0/certificate_authorities/OLD-CERT-GUID" \
        -X DELETE \
        -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN"
</pre>
The API returns a successful response.
<pre class="terminal">HTTP/1.1 200 OK</pre>

1. Navigate to Ops Manager, click **Review Pending Changes**, and click **Apply Changes**.


### <a id='regenerate'></a> Rotate Non-Configurable Certificates

This procedure regenerates non-configurable leaf certificates visible to the Ops Manager API, whether they are managed and stored by Ops Manager directly, or by CredHub at Ops Manager request.

Run by itself, this procedure does not rotate or otherwise affect the Ops Manager root CA.

To rotate non-configurable certificates, do the following:

1. Use `curl` to make an API call to regenerate all non-configurable certificates and apply the new CA to your existing BOSH Director:
<pre>
  curl "http<span>s</span>://OPS-MAN-FQDN/api/v0/certificate_authorities/active/regenerate" \
        -X POST \
        -H "Authorization: Bearer YOUR-UAA-ACCESS-TOKEN" \
        -H "Content-Type: application/json" \
        -d '{}'
</pre>
The API returns a successful response:
<pre class="terminal">HTTP/1.1 200 OK</pre>

1. Navigate to Ops Manager, click **Review Pending Changes**, and click **Apply Changes** to perform a second redeploy.


### <a id='rotate-config'></a> Rotate Configurable Certificates

Configurable certificates are generated by the user and pasted into Ops Manager configuration panes where needed. Examples include certificates that terminate SSL traffic into PAS, or authenticate a Single Sign-On (SSO) service plan to an external SAML server.

For specific instructions on how to rotate SAML certificates for both PAS and the SSO service, see [Identity Provider SAML Certificates](#rotate-saml-ca). These certificates expire every two years, and every IdP has its own certificate that may require its own rotation cadence.

For Ops Manager, PAS, and other runtimes, Pivotal recommends only rotating configurable certificates within the more inclusive [Rotate Root and Leaf Certificates](#rotate-ca) procedure. But if you are sure that only your configurable certificates need rotation, and no others, you can run this procedure by itself and click **Apply Changes** at the end.

To rotate configurable certificates, do the following:

1. If you haven't already, use the Ops Manager API `deployed/certificates` endpoint to retrieve information about your expiring configurable certificates, as described in the procedures [Check Leaf Certificate Expiration Dates](#leaf-expiry) and [Identify Non-Configurable, Configurable, and Unrotatable Leaf Certificates](#id-leaf-type).  
The information for each configurable certificate looks like this:
  <pre class="terminal">
    {
      "configurable": true,
      "property_reference": ".properties.networking_poe_ssl_certs[0].certificate",
      "property_type": "rsa_cert_credentials",
      "product_guid": "cf-36066831c119c39736d3",
      ...
      "valid_until": "2019-01-25T22:07:58Z"
    },
  </pre>

1. For each configurable certificate that expires soon:
  1. Find the text field the certificate is configured within the Ops Manager interface.
      * The `product_guid` field in the API output can help identify which tile the certificate is configured in. For example, the prefix `p-bosh-` refers to the BOSH Director tile, and the prefix `cf-` refers to the PAS tile.
      * The `property_reference` field in the API output can often help identify which **Settings** pane the certificate is configured in. For example, the `uaa.service_provider_key_credentials` property is configured in the PAS tile > **UAA** pane.
      * You might have to look through multiple configuration panes to identify where a certificate is configured.
  2. Paste a new value for the certificate into the field
  3. Click **Save** at the bottom of each pane in which you have provided new certificates.

1. If you are rotating configurable certificates within the [Rotate Root and Leaf Certificates](#rotate-ca) procedure, continue to the next step. Otherwise, if you are rotating configurable certificates only, return to the **Installation Dashboard**, click **Review Pending Changes**, and click **Apply Changes**.

#### <a id='rotate-saml-ca'></a> Identity Provider SAML Certificates

SAML service provider credentials are one example of configurable certificates in PCF. When PAS is configured to use SAML as an identity provider, it uses a configurable CA certificate to authenticate to an external SAML server, by generating ephemeral certificates that PAS includes in its outbound request message headers. This CA has a two-year expiration period.

In addition, the [SSO](https://docs.pivotal.io/p-identity/index.html) service shares the use of PAS SAML certificates for every SAML external Identity Provider (IdP) integration, such as trust,  partnership, or Federation. You must rotate these in lockstep with PAS.

The [Rotate Your SAML CA for SSO](#rotate-saml-ca)  procedure below provides an example of how to rotate certificates for each IdP, including temporarily disabling certificate validation on the IdP side during the rotation.

The Knowledge Base article [PCF Advisory - SAML Service Provider Credential Certificates Expire after 2 Years](https://community.pivotal.io/s/article/PCF-Advisory---SAML-Service-Provider-Credential-Certificates-Expire-after-2-Years) provides more information about rotating SAML certificates.


##### <a id='rotate-saml-ca-sso'></a> Rotate Your SAML CA for PAS and the SSO Service

SAML service provider credentials are only required for your PAS deployment if all of these conditions are met:

* You are using SSO in production for login to PAS or using the SSO service for login to apps.
* You are using SAML identity providers for PAS or SSO service plans.
* You had Ops Manager generate a certificate for you by clicking the **Generate RSA Certificate** button.
* You are validating the signature of SAML authentication request with your identity provider.

To regenerate and rotate SAML service provider certificates without disrupting PAS or your apps using the SSO service, do the following:

1. Disable certificate validation in your identity provider.

1. For PAS, follow the procedure in the table below that corresponds to your use case. This includes downloading and importing a new certificate and updated SAML metadata in your identity provider. 
  <table border="1">
  <tr>
    <th>Solution Name</th>
    <th>Procedure</th>
  </tr>
  <tr>
    <td><a href='http://www.ca.com/us/securecenter/ca-single-sign-on.aspx'>CA Single Sign-On aka CA SiteMinder</a></td>
    <td><a href="../../opsguide/ca-sso-config.html">Configuring CA as an Identity Provider</a></td>
  </tr>
  <tr>
    <td><a href='https://www.pingidentity.com/en/products/pingfederate.html'>Ping Federate</a></td>
    <td><a href="../../opsguide/ping-federate-sso-configuration.html">Configuring PingFederate as an Identity Provider</a></td>
  </tr>
  <tr>
    <td><a href='https://technet.microsoft.com/en-us/windowsserver/dd448613.aspx'>Active Directory Federation Services</a></td>
    <td><a href="../../opsguide/adfs-sso-configuration.html">Configuring ADFS as an Identity Provider</a></td>
  </tr>
</table>

1. For the SSO service, follow the procedure in the table below that corresponds to your use case. This includes downloading the SAML Service Provider metadata for each SAML identity provider integration, such as trust, partnership, or Federation, and importing the updated SAML Service Provider metadata in your identity provider.
  <table border="1">
  <tr>
    <th>Solution Name</th>
    <th>Procedure</th>
  </tr>
  <tr>
    <td>ADFS</td>
    <td><a href="https://docs.pivotal.io/p-identity/adfs/config-sso.html">Configuring a Single Sign-On Service Provider</a></td>
  </tr>
  <tr>
    <td>CA SSO</td>
    <td><a href="https://docs.pivotal.io/p-identity/ca-sso/config-sso.html">Configuring a Single Sign-On Service Provider</a></td>
  </tr>
  <tr>
    <td>Okta</td>
    <td><a href="https://docs.pivotal.io/p-identity/okta/config-sso.html">Configure Okta as an Identity Provider</a></td>
  </tr>
  <tr>
    <td>PingFederate</td>
    <td><a href="https://docs.pivotal.io/p-identity/pingfederate/config-sso.html">Configure PingFederate as an Identity Provider</a></td>
  </tr>
  <tr>
    <td>Additional Documentation</td>
    <td><a href="https://docs.pivotal.io/p-identity/index.html#guides">Integration Guides</a></td>
  </tr>
  </table>

1. Re-enable certificate validation in your identity provider.
